name: Build Portfolio Manager - Dual Version

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flet markdown weasyprint

    - name: Build Standalone version
      run: |
        pyinstaller --onefile --name PortfolioManager-Standalone-${{ matrix.platform }} portfolio_manager_standalone.py

    - name: Build Flet version (may fail on some systems)
      continue-on-error: true
      run: |
        pyinstaller --onefile --windowed --name PortfolioManager-GUI-${{ matrix.platform }} main_flet.py

    - name: Set execute permissions for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        chmod +x dist/PortfolioManager-Standalone-${{ matrix.platform }} || true
        chmod +x dist/PortfolioManager-GUI-${{ matrix.platform }} || true

    - name: Upload Standalone artifact
      uses: actions/upload-artifact@v4
      with:
        name: PortfolioManager-Standalone-${{ matrix.platform }}
        path: dist/PortfolioManager-Standalone-${{ matrix.platform }}*

    - name: Upload GUI artifact (if exists)
      uses: actions/upload-artifact@v4
      with:
        name: PortfolioManager-GUI-${{ matrix.platform }}
        path: dist/PortfolioManager-GUI-${{ matrix.platform }}*
      continue-on-error: true

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Portfolio Manager ${{ github.ref_name }}
        body: |
          ## Portfolio Manager ${{ github.ref_name }}
          
          ### üöÄ Two Versions Available
          
          **Standalone Version (Recommended for Linux)**
          - ‚úÖ **Always works** - Text-based interface
          - ‚úÖ **No dependencies** - Self-contained executable
          - ‚úÖ **All core features** - Add items, feedback, export data
          - üìù **Perfect for development** and when GUI doesn't work
          
          **GUI Version (Flet-based)**
          - üé® **Beautiful interface** - Full graphical application
          - üìä **Rich features** - Tables, forms, document generation
          - ‚ö†Ô∏è **May not work on all Linux systems** due to Flet compatibility
          - ü™ü **Best on Windows/macOS**
          
          ### üêß Linux Users
          If the GUI version doesn't work (restart loops), use the **Standalone** version instead!
          
          ### Downloads
          - `PortfolioManager-Standalone-*` - Text interface (always works)
          - `PortfolioManager-GUI-*` - Graphical interface (if compatible)
        draft: false
        prerelease: false

    - name: Upload Standalone Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-Standalone-linux/PortfolioManager-Standalone-linux
        asset_name: PortfolioManager-Standalone-linux
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload Windows Standalone
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-Standalone-windows/PortfolioManager-Standalone-windows.exe
        asset_name: PortfolioManager-Standalone-windows.exe
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload macOS Standalone
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-Standalone-macos/PortfolioManager-Standalone-macos
        asset_name: PortfolioManager-Standalone-macos
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload GUI Release Assets (if they exist)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-GUI-linux/PortfolioManager-GUI-linux
        asset_name: PortfolioManager-GUI-linux
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload Windows GUI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-GUI-windows/PortfolioManager-GUI-windows.exe
        asset_name: PortfolioManager-GUI-windows.exe
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload macOS GUI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./PortfolioManager-GUI-macos/PortfolioManager-GUI-macos
        asset_name: PortfolioManager-GUI-macos
        asset_content_type: application/octet-stream
      continue-on-error: true
